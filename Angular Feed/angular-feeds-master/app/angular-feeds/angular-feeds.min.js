/**
 * angular-feeds - v0.0.4 - 2015-04-07 6:38 PM
 * https://github.com/siddii/angular-feeds
 *
 * Copyright (c) 2015 
 * Licensed MIT <https://github.com/siddii/angular-feeds/blob/master/LICENSE.txt>
 */
"use strict";angular.module("feeds-directives",[]).directive("feed",["feedService","$compile","$templateCache","$http",function(a,b,c,d){return{restrict:"E",scope:{summary:"=summary"},controller:["$scope","$element","$attrs","$timeout",function(e,f,g,h){function i(a,c){if(f.append(b(a)(e)),c)for(var d=0;d<c.length;d++)e.feeds.push(c[d])}e.$watch("finishedLoading",function(a){g.postRender&&a&&h(function(){new Function("element",g.postRender+"(element);")(f)},0)}),e.feeds=[];var j=c.get("feed-spinner.html");f.append(b(j)(e)),a.getFeeds(g.url,g.count).then(function(a){g.templateUrl?d.get(g.templateUrl,{cache:c}).success(function(b){i(b,a)}):i(c.get("feed-list.html"),a)},function(a){console.error("Error loading feed ",a),e.error=a,i(c.get("feed-list.html"))}).finally(function(){f.find(".spinner").slideUp(),e.$evalAsync("finishedLoading = true")})}]}}]),angular.module("feeds",["feeds-services","feeds-directives"]),angular.module("feeds-services",[]).factory("feedService",["$q","$sce","feedCache",function(a,b,c){function d(a){return a.title=b.trustAsHtml(a.title),a.contentSnippet=b.trustAsHtml(a.contentSnippet),a.content=b.trustAsHtml(a.content),a.publishedDate=new Date(a.publishedDate).getTime(),a}var e=function(b,e){var f=a.defer();if(c.hasCache(b))return f.resolve(d(c.get(b)));var g=new google.feeds.Feed(b);return e&&(g.includeHistoricalEntries(),g.setNumEntries(e)),g.load(function(a){if(a.error)f.reject(a.error);else{c.set(a.feed.entries);for(var b=0;b<a.feed.entries.length;b++)d(a.feed.entries[b]);f.resolve(a.feed.entries)}}),f.promise};return{getFeeds:e}}]).factory("feedCache",function(){function a(){return"CACHE_TIMES"in localStorage?angular.fromJson(localStorage.CACHE_TIMES):{}}function b(b){var d=a();return b in d&&b in localStorage&&(new Date).getTime()-d[b]<c}var c=3e5;return{set:function(b,c){localStorage[b]=angular.toJson(c);var d=a();d[b]=(new Date).getTime(),localStorage.CACHE_TIMES=angular.toJson(d)},get:function(a){return b(a)?angular.fromJson(localStorage[a]):null},hasCache:b}}),angular.module("feeds").run(["$templateCache",function(a){a.put("feed-list.html",'<div>\n    <div ng-show="error" class="alert alert-danger">\n        <h5 class="text-center">Oops... Something bad happened, please try later :(</h5>\n    </div>\n\n    <ul class="media-list">\n        <li ng-repeat="feed in feeds | orderBy:publishedDate:reverse" class="media">\n            <div class="media-body">\n                <h4 class="media-heading"><a target="_new" href="{{feed.link}}" ng-bind-html="feed.title"></a></h4>\n                <p ng-bind-html="!summary ? feed.content : feed.contentSnippet"></p>\n            </div>\n            <hr ng-if="!$last"/>\n        </li>\n    </ul>\n</div>'),a.put("feed-spinner.html",'<div class="spinner">\n    <div class="bar1"></div>\n    <div class="bar2"></div>\n    <div class="bar3"></div>\n    <div class="bar4"></div>\n    <div class="bar5"></div>\n    <div class="bar6"></div>\n    <div class="bar7"></div>\n    <div class="bar8"></div>\n</div>\n')}]);